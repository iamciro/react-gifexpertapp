{"version":3,"sources":["components/AddCategory.js","components/GridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","console","log","type","value","onChange","target","GridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAXc,SAACC,GACrBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,KAEhBO,QAAQC,IAAI,iBAIZ,SACE,uBACEC,KAAK,OACLC,MAAQX,EACRY,SAnBa,SAACT,GAClBF,EAAcE,EAAEU,OAAOF,a,QCNdG,EAAW,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAClC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCJJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAWF,GAD/C,+DAEDG,MAAMR,GAFL,cAEbS,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QATlB,kBAaZY,GAbY,4CAAH,sDCEPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAExB,ECH0B,SAACA,GAE3B,MAA0BvB,mBAAS,CACjC6B,KAAM,GACNO,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WACTjB,EAAQC,GACLiB,MAAM,SAAAP,GAELK,EAAS,CACPT,KAAMI,EACNG,SAAS,SAKd,CAAEb,IAEEc,EDjB0BI,CAAalB,GAAjCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAErB,OACE,qCACE,6BAAKb,IACHa,GAAW,mBAAGjB,UAAU,oCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEMc,EAAOF,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEOA,GADAA,EAAIhB,aEZZ0B,EAAe,WAE1B,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEIS,EAAWuB,KAAI,SAAAR,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCZnBoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6720303.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const addHandler = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if(inputValue.trim().length > 2){\r\n      setCategories(categories => [inputValue, ...categories]);\r\n      setInputValue('');\r\n    }\r\n    console.log('Submit hecho');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ submitHandler }>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ addHandler }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=uQheDdMfyfUI0wbCiOhCv9Xrbg0OVlSF`\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n\r\n    const gifs = data.map( img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url\r\n      }\r\n    });\r\n\r\n    return gifs;\r\n  }","import React from 'react'\r\nimport { GridItem } from './GridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      { loading && <p className='animate__animated animate__fadeIn'>Loading...</p> }\r\n      <div className=\"card-grid\">\r\n        {\r\n            images.map(img => (\r\n              <GridItem\r\n                key={img.id}\r\n                { ...img }\r\n              />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs(category)\r\n      .then( images => {\r\n\r\n        setState({\r\n          data: images,\r\n          loading: false\r\n        })\r\n\r\n        }\r\n      )\r\n  }, [ category ]);\r\n\r\n  return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}